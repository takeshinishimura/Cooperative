---
project:
  type: website
  output-dir: docs
title: "地図"
format:
  html:
    toc: true
    toc-title: 目次
    toc_float: true
    toc-depth: 3
    number-sections: true
    theme: lumen
lang: ja
---

ここでは，都道府県ごとの農業協同組合の数の視覚的な把握を試みます。

e-Statを探すと，都道府県ごとの農協の数に関する統計データが存在することがわかります。

::: {.callout-note collapse="true" icon="true"}
## 農業協同組合等現在数統計 確報 令和４年度農業協同組合等現在数統計 都道府県別業種別現在数

[https://www.e-stat.go.jp/stat-search/files?stat_infid=000040060822](https://www.e-stat.go.jp/stat-search/files?stat_infid=000040060822){target="_blank"}

[https://www.e-stat.go.jp/stat-search/files?stat_infid=000040060823](https://www.e-stat.go.jp/stat-search/files?stat_infid=000040060823){target="_blank"}

[https://www.e-stat.go.jp/stat-search/files?stat_infid=000040060824](https://www.e-stat.go.jp/stat-search/files?stat_infid=000040060824){target="_blank"}
:::

それぞれのページからExcelファイルをダウンロードできます。
これらのファイルをRで読み込む前に，Excelで開いてみます。
これは参った。
ヘッダーがゴチャゴチャしています。
ここで，Excelではグラフ作成時にセルを指定できるから何の問題もないと考える人にとっては，以下の説明は無益です。

以下では，e-StatのAPIを使って，Rに統計データを取り込むことから始めます。

## e-Statからデータ取得

次のコードを実行し，欲しいデータを取得しましょう。
コードにある `statsDataId = "0002066880"` の数字はアクセスしたい統計データのIDです。
Excelファイルだと3つ開かなければなりませんでしたが，APIを使うとデータ取得は一度だけですむことがわかります。
```{r}
library(estatapi)
library(dplyr)

appId <- keyring::key_get("e-stat")
statsDataId <- "0002066880"
(meta_info <- estat_getMetaInfo(appId = appId, statsDataId = statsDataId))

# 統計データ取得
df <- estat_getStatsData(
  appId = appId,
  statsDataId = statsDataId
)
df
df2 <- df

str(df2)

# 都道府県の順番を保持する
(pref <- unique(df2$`(R006-02-2-002)都道府県`))
# 不要な都道府県名を削除する
(pref <- pref[-grep("計$|^２|^全", pref)])
# データフレームから不要な都道府県名を削除する
df2 <- df2 |>
  filter(`(R006-02-2-002)都道府県` %in% pref)
unique(df2$`(R006-02-2-002)都道府県`)
df2$`(R006-02-2-002)都道府県` <- factor(df2$`(R006-02-2-002)都道府県`, levels = pref)

unique(df2$`(r006-02-1-002)区分`)
df2$`(r006-02-1-002)区分` <- factor(df2$`(r006-02-1-002)区分`, levels = unique(df2$`(r006-02-1-002)区分`))
df2 <- df2 |>
  filter(!grepl("計$", df2$`(r006-02-1-002)区分`))
df2$`(r006-02-1-002)区分` <- droplevels(df2$`(r006-02-1-002)区分`)
unique(df2$`(r006-02-1-002)区分`)
str(df2)
```


## 都道府県別データの作図

総合農協の数を都道府県別に比較してみましょう。

たまに見かけるのが，横軸を都道府県とした折れ線グラフです。
```{r}
#| warning: false
library(ggplot2)

df_sougou <- df2 |>
  filter(`(r006-02-1-002)区分` == "出資組合（第２表）_総合農協") |>
  droplevels()

g <- ggplot(data = df_sougou) +
  geom_line(aes(x = `(R006-02-2-002)都道府県`, y = value), group = "") +
  labs(title = "都道府県別総合農協の数",
       y = "総合農協の数",
       caption = "出典：農林水産省『農業協同組合等現在数統計 確報 令和4年度農業協同組合等現在数統計』\n（https://www.e-stat.go.jp/stat-search/files?stat_infid=000040060822）") +
  theme(axis.title.x = element_blank(),
        axis.text.x = element_text(angle = 90, hjust = 1, vjust = .5))
g + theme(text = element_text(family = "HiraKakuProN-W3"))
```

最後のところでエラーが出る場合は，`g` だけにして，プラス以降を入力しないようにしてください。
文字化けするかもしれませんが，気にしないようにしましょう（文字化けを修正するのは大変）。

しかし，こういう場合に折れ線グラフを使うのは間違っています。
何が間違っているか考えてみてください。
この場合，棒グラフの方がより望ましいです。
```{r}
g <- ggplot(data = df_sougou) +
  geom_bar(aes(x = `(R006-02-2-002)都道府県`, y = value), stat = "identity") +
  labs(title = "都道府県別総合農協の数",
       y = "総合農協の数",
       caption = "出典：農林水産省『農業協同組合等現在数統計 確報 令和4年度農業協同組合等現在数統計』\n（https://www.e-stat.go.jp/stat-search/files?stat_infid=000040060822）") +
  theme(axis.title.x = element_blank(),
        axis.text.x = element_text(angle = 90, hjust = 1, vjust = .5))
g + theme(text = element_text(family = "HiraKakuProN-W3"))
```

この図は図として正しいです。
ただし，大変見づらいのではないでしょうか。
見づらい理由は，横軸（都道府県）が細分化されているのに加えて，北海道の値だけが大きいためです。
なお，グラフを描かずとも，次のコマンドでほぼ類似の情報が得られます。
```{r}
summary(df_sougou$value)
stem(df_sougou$value, scale = 2)
```

それでは，どうすれば見やすくなるでしょうか。
このとき，決して棒グラフの途中を省略して，北海道の棒を低くしてはなりません。
途中を省略した棒グラフを幽霊グラフと呼ぶことがあります（[【連載】ねこでも分かる！いかさまグラフにはもうダマされない！！「第５回　棒グラフ（１）」 - ed-ict｜授業でもっとICT活用](https://www.ed-ict.net/entry/neco-demo-wakaru-graph-5){target="_blank"}を参照）。

北海道を除いたグラフを作成してみましょう。
```{r}
g <- ggplot(data = df_sougou[df_sougou$`(R006-02-2-002)都道府県` != "北海道", ]) +
  geom_bar(aes(x = `(R006-02-2-002)都道府県`, y = value), stat = "identity", fill = "gray", colour = "black") +
  geom_hline(yintercept = mean(df_sougou[df_sougou$`(R006-02-2-002)都道府県` != "北海道", ]$value), colour = "red", linetype = "dashed") +
  labs(title = "都府県別総合農協数",
       y = "総合農協の数",
       caption = "出典：農林水産省『農業協同組合等現在数統計 確報 令和4年度農業協同組合等現在数統計』\n（https://www.e-stat.go.jp/stat-search/files?stat_infid=000040060822）") +
  theme_minimal() +
  theme(axis.title.x = element_blank(),
        axis.text.x = element_text(angle = 90, hjust = 1, vjust = .5))
g + theme(text = element_text(family = "HiraKakuProN-W3"))
```

北海道を除くとともに，平均値を赤色の点線で図に示しました。
やはり残念なグラフになってしまいます。
しかし，まったく無意味とは言えません。
というのも，この棒グラフから，総合農協の数は西日本より，東日本の方が多い傾向にあることが分かるからです。

棒グラフと似たものにロリポップチャートがあり，次のように点と線の組み合わせで表現します。
```{r}
#| warning: false
library(geomtextpath)

g <- ggplot(data = df_sougou) +
  geom_segment(aes(x = 0,
                   y = `(R006-02-2-002)都道府県`,
                   xend = value,
                   yend = `(R006-02-2-002)都道府県`,
                   colour = ifelse(value > mean(value), "black", "white")), linewidth = .8) +
  geom_point(aes(x = value,
                 y = `(R006-02-2-002)都道府県`,
                 colour = ifelse(value > mean(value), "black", "white"))) +
  scale_y_discrete(limits = rev) +
  geom_textvline(label = paste0("mean = ", format(round(mean(df_sougou$value), 1), nsmall = 1)), xintercept = mean(df_sougou$value), colour = "red", linetype = "dashed", hjust = 0, vjust = -.5) +
  labs(title = "都道府県別総合農協の数",
       y = "総合農協の数",
       caption = "出典：農林水産省『農業協同組合等現在数統計 確報 令和4年度農業協同組合等現在数統計』\n（https://www.e-stat.go.jp/stat-search/files?stat_infid=000040060822）") +
  theme_minimal() +
  scale_color_brewer(palette = "Paired", direction = 1) +
# scale_color_brewer(palette = "Paired", direction = -1) +
  theme(legend.position = "none") +
  theme(axis.title = element_blank())
g + theme(text = element_text(family = "HiraKakuProN-W3"))
```

ここでは，総合農協の数が全国平均より少ない都道府県を強調しています。
逆に，多い都道府県を強調したければ，`direction` を `-1` にするだけです。
```{r}
#| include: false
outdir <- "../fig"
if (!file.exists(outdir)) {
  dir.create(outdir)
}

ggsave(file = "number_of_ja_by_pref_lollipop.pdf", plot = g, path = outdir, width = 10, height = 7)
```

縦軸で都道府県の順位を表現することもできます。
```{r}
#| warning: false
g <- ggplot(data = df_sougou) +
  geom_segment(aes(x = 0, y = `(R006-02-2-002)都道府県`[order(value)],
                   xend = value[order(value)],
                   yend = `(R006-02-2-002)都道府県`[order(value)]),
              colour = "darkorange",
              linewidth = .8) +
  geom_point(aes(x = value[order(value)],
                 y = `(R006-02-2-002)都道府県`[order(value)]),
             colour = "darkorange") +
  scale_y_discrete(limits = df_sougou$`(R006-02-2-002)都道府県`[order(df_sougou$value)]) +
  geom_textvline(label = paste0("mean = ", format(round(mean(df_sougou$value), 1), nsmall = 1)), xintercept = mean(df_sougou$value), colour = "gray60", linetype = "dashed", hjust = 0, vjust = -.5) +
  labs(title = "都道府県別総合農協数",
       y = "総合農協の数",
       caption = "出典：農林水産省『農業協同組合等現在数統計 確報 令和4年度農業協同組合等現在数統計』\n（https://www.e-stat.go.jp/stat-search/files?stat_infid=000040060822）") +
  theme_minimal() +
  theme(legend.position = "none") +
  theme(axis.title = element_blank())
g + theme(text = element_text(family = "HiraKakuProN-W3"))
```

```{r}
#| include: false
ggsave(file = "number_of_ja_by_pref_lollipop_ordered.pdf", plot = g, path = outdir, width = 10, height = 7)
```

手軽にロリポップチャートを描く方法はあるが，細かいカスタマイズはできないかもしれない。
```{r}
library(ggpubr)

df_sougou$x <- df_sougou$`(R006-02-2-002)都道府県`

g <- ggdotchart(data = df_sougou, x = "x", y = "value",
           color = "darkorange",
           sorting = "descending",
           add = "segments",
           rotate = TRUE,
           dot.size = 4,
           label = round(df_sougou$value),
           font.label = list(color = "white", size = 6, vjust = 0.5),
           ggtheme = theme_pubr()
           ) +
  labs(title = "都道府県別総合農協の数",
       y = "総合農協の数",
       caption = "出典：農林水産省『農業協同組合等現在数統計 確報 令和3年度農業協同組合等現在数統計』\n（https://www.e-stat.go.jp/stat-search/files?stat_infid=000040060822）") +
  theme(legend.position = "none") +
  theme(axis.title = element_blank())
g + theme(text = element_text(family = "HiraKakuProN-W3"))
```

これらのグラフは諦めて，日本地図に表示するとどうなるでしょうか。


## 都道府県別に色分けした地図

### 都道府県別総合農協の数

```{r}
#| warning: false
library(rnaturalearth)
library(rnaturalearthhires)

japan_map <- rnaturalearth::ne_states("Japan", returnclass = "sf")
japan_map$pref <- japan_map$name_ja

# 農協のデータに「都府県」の文字を追加する
df_sougou$pref <- df_sougou$`(R006-02-2-002)都道府県`
df_sougou$pref <- ifelse(df_sougou$pref %in% c("北海道", "東京", "京都", "大阪"),
              paste0(df_sougou$pref, c("", "都", "府", "府")[match(df_sougou$pref, c("北海道", "東京", "京都", "大阪"))]),
              paste0(df_sougou$pref, "県"))

japan_map2 <- dplyr::left_join(japan_map, df_sougou, by = "pref")

g <- ggplot(data = japan_map2) +
  geom_sf(aes(fill = value)) +
  scale_fill_distiller(name = "総合農協の数", palette = "Greens", direction = 1) +
  labs(title = "都道府県別総合農協の数",
       caption = "出典：農林水産省『農業協同組合等現在数統計 確報 令和4年度農業協同組合等現在数統計』\n（https://www.e-stat.go.jp/stat-search/files?stat_infid=000040060822）") +
  theme_void()
g + theme(text = element_text(family = "HiraKakuProN-W3"))
```

北海道だけが極端に色が濃くなりました。
実際の数値がこうであるのだから，これはこれで問題ないですが，これだけの情報なら地図で示すほどでもない気がします。
北海道を除いた地図を作成すべきでしょうか。
いやそれは馬鹿げているでしょう。

そこで，農協の数の順位に応じて都道府県を4段階に分けて，色を塗ってみます。
これにより，農協の数が相対的に多い都道府県と少ない都道府県が分かるようになります。
その前に，表示範囲が広いので，もう少し本州を中心とした図にしましょう。
```{r}
library(rmapshaper)

df_pref <- data.frame(pref = df_sougou$pref,
                      value4 = factor(cut(df_sougou$value, breaks = quantile(df_sougou$value), labels = FALSE, include.lowest = TRUE)))

japan_map3 <- dplyr::left_join(japan_map2, df_pref, by = "pref")
# 離島を削除する
japan_map_shrinked <- rmapshaper::ms_filter_islands(japan_map3, min_area = 300000000)
# japan_map_shrinked <- rmapshaper::ms_filter_islands(japan_map3, min_area = 1301448169)# 沖縄県が消える ※沖縄本島の面積は1,207.00km2

g <- ggplot(data = japan_map_shrinked) +
  geom_sf(aes(fill = value4)) +
  guides(fill = guide_legend(title = "総合農協の数（4段階）", reverse = TRUE)) +
  scale_fill_brewer(palette = "BuGn") +
  labs(title = "都道府県別総合農協の数",
       caption = "出典：農林水産省『農業協同組合等現在数統計 確報 令和4年度農業協同組合等現在数統計』\n（https://www.e-stat.go.jp/stat-search/files?stat_infid=000040060822）") +
  theme_void() +
  theme(plot.caption = element_text(size = 5))
g + theme(text = element_text(family = "HiraKakuProN-W3"))
```

```{r}
#| include: false
ggsave(file = "number_of_ja_map_by_pref.pdf", plot = g, path = outdir, width = 8, height = 7)
```

ここでは，一定の面積より小さい離島を削除しました。
離島を削除することに問題はあるかもしれません。
描画範囲を指定することも考えましたたが，いずれにしてもどこを消すかを判断しなければならず，苦渋の決断が強いられます。
沖縄県を切り取って左上に表示する方法もよく用いられるが，それだけではこの問題は解決しません。
おそらく専門家はどうすべきか答えを持っているはずであるが，私はその答えを知りません。
ここでの目的は都道府県別の比較であるため，全都道府県（の大半）が表示されていれば問題ないと考え，このような図にしました。

ここで，[bertin](https://github.com/BjnNowak/bertin){target="_blank"} パッケージを使うとどうなるか試してみます。
```{r}
#| warning: false
library(NipponMap)
library(sf)

nippon_map <- sf::read_sf(system.file("shapes/jpn.shp", package = "NipponMap")[1], crs = "WGS84")
nippon_map$name
nippon_map$pref <- df_sougou$pref# こういう強引なことは本来はやってはいけない
nippon_map2 <- dplyr::left_join(nippon_map, df_sougou, by = "pref")

library(bertin)

regions_valued <- bertin::make_points(
  polygon = nippon_map2,
  n = 45,
  square = TRUE
)

g <- ggplot() +
  geom_sf(data = nippon_map2,
          mapping = aes(geometry = geometry),
          inherit.aes = FALSE,
          color = alpha("black", .1)) +
  geom_sf(data = regions_valued, aes(size = value)) +
  scale_size(range = c(1, 4)) +
  labs(title = "都道府県別総合農協の数",
       caption = "出典：農林水産省『農業協同組合等現在数統計 確報 令和4年度農業協同組合等現在数統計』\n（https://www.e-stat.go.jp/stat-search/files?stat_infid=000040060822）") +
  theme_void()
g + theme(text = element_text(family = "HiraKakuProN-W3"))
```

```{r}
#| include: false
ggsave(file = "number_of_ja_map_by_pref_bertin.pdf", plot = g, path = outdir, width = 8, height = 7)
```

この地図は先ほどの地図と若干異なることに気づいたかもしれません。
先ほどとは異なるパッケージで地図を描画しています。

### 都道府県別専門農協の数

さて，これまでを振り返ると総合農協の数しか図示してきませんでした。
次に，専門農協の数を図示してみましょう。
```{r}
#| message: false
df_senmon <- df2 |>
  filter(grepl("（参考１）出資組合と非出資組合の計（専門農協、業種別）_", `(r006-02-1-002)区分`)) |>
  droplevels()
levels(df_senmon$`(r006-02-1-002)区分`) <- sub("（参考１）出資組合と非出資組合の計（専門農協、業種別）_", "", levels(df_senmon$`(r006-02-1-002)区分`))

# 農協のデータに「都府県」の文字を追加する
df_senmon$pref <- df_senmon$`(R006-02-2-002)都道府県`
df_senmon$pref <- ifelse(df_senmon$pref %in% c("北海道", "東京", "京都", "大阪"),
              paste0(df_senmon$pref, c("", "都", "府", "府")[match(df_senmon$pref, c("北海道", "東京", "京都", "大阪"))]),
              paste0(df_senmon$pref, "県"))

# 地図上のNAの色がグレーになるため，NAを0にする
# df_senmon$value[is.na(df_senmon$value)] <- 0

nippon_map3 <- dplyr::left_join(nippon_map, df_senmon, by = "pref")

g <- ggplot(data = nippon_map3) +
  geom_sf(aes(fill = value)) +
  scale_fill_distiller(name = "専門農協の数", palette = "YlOrRd", direction = 1) +
  theme(axis.text = element_blank()) +
  facet_wrap(vars(`(r006-02-1-002)区分`)) +
  theme_classic() +
  theme(axis.line = element_blank(),
        axis.ticks = element_blank(),
        axis.text = element_blank(),
        plot.caption = element_text(size = 5))
g + theme(text = element_text(family = "HiraKakuProN-W3"))
```

```{r}
#| include: false
ggsave(file = "number_of_ja_by_pref_map2.pdf", plot = g, path = outdir, width = 10, height = 10)
```

岩手県には牧野管理の専門農協が多いことが分かる。
この差は以前から続いているのでしょうか。
調べてみましょう。
```{r}
#| warning: false
# 平成27年度農業協同組合等現在数統計
statsDataId <- "0003350673"
df2015 <- estat_getStatsData(
  appId = appId,
  statsDataId = statsDataId
)
pref <- grep("計$|^2県|^全", unique(df2015$`(R006-2015-002)都道府県`), value = TRUE, invert = TRUE)
df2015 <- df2015 |>
  filter(`(R006-2015-002)都道府県` %in% pref) |>
  mutate(`(R006-2015-002)都道府県` = sub("都$|府$|県$", "", `(R006-2015-002)都道府県`)) |>
  filter(`(R006-2015-004)単位農協の部業種別現在数計` != "計") |>
  rename("都道府県" = `(R006-2015-002)都道府県`,
         "区分" = `(R006-2015-004)単位農協の部業種別現在数計`,
         "cat02_code" = "area_code") |>
  mutate(year = 2015)

# 平成28年度農業協同組合等現在数統計
statsDataId <- "0003350618"
df2016 <- estat_getStatsData(
  appId = appId,
  statsDataId = statsDataId
)
df2016 <- df2016 |>
  filter(`(R006-2016-002)都道府県` %in% pref) |>
  mutate(`(R006-2016-002)都道府県` = sub("都$|府$|県$", "", `(R006-2016-002)都道府県`)) |>
  filter(`(R006-2016-004)単位農協の部業種別現在数計` != "計") |>
  rename("都道府県" = `(R006-2016-002)都道府県`,
         "区分" = `(R006-2016-004)単位農協の部業種別現在数計`,
         "cat02_code" = "area_code") |>
  mutate(year = 2016)

# 平成29年度農業協同組合等現在数統計
statsDataId <- "0003283565"
df2017 <- estat_getStatsData(
  appId = appId,
  statsDataId = statsDataId
)
df2017 <- df2017 |>
  filter(`(R006-2017-002)都道府県` %in% pref) |>
  mutate(`(R006-2017-002)都道府県` = sub("都$|府$|県$", "", `(R006-2017-002)都道府県`)) |>
  filter(`(R006-2017-004)単位農協の部業種別現在数計` != "計") |>
  rename("都道府県" = `(R006-2017-002)都道府県`,
         "区分" = `(R006-2017-004)単位農協の部業種別現在数計`,
         "cat02_code" = "area_code") |>
  mutate(year = 2017)

# 令和元年度農業協同組合等現在数統計
statsDataId <- "0003417778"
df2019 <- estat_getStatsData(
  appId = appId,
  statsDataId = statsDataId
)
df2019 <- df2019 |>
  filter(`(R006-2019-002)都道府県` %in% pref) |>
  mutate(`(R006-2019-002)都道府県` = sub("都$|府$|県$", "", `(R006-2019-002)都道府県`)) |>
filter(`(R006-2019-004)単位農協の部業種別現在数計` != "計") |>
  rename("都道府県" = `(R006-2019-002)都道府県`,
         "区分" = `(R006-2019-004)単位農協の部業種別現在数計`,
         "cat02_code" = "area_code") |>
  mutate(year = 2019)

# 令和2年度農業協同組合等現在数統計
statsDataId <- "0001887884"
df2020 <- estat_getStatsData(
  appId = appId,
  statsDataId = statsDataId
)
# 都道府県の表記が変わった
pref <- grep("計$|^２県|^全", unique(df2020$`(R006-02-2-002)都道府県`), value = TRUE, invert = TRUE)
df2020 <- df2020 |>
  filter(`(R006-02-2-002)都道府県` %in% pref) |>
  filter(`(R006-02-1-004)単位農協の部業種別現在数計` != "計") |>
  rename("都道府県" = `(R006-02-2-002)都道府県`,
         "区分" = `(R006-02-1-004)単位農協の部業種別現在数計`) |>
  mutate(year = 2020)

# 令和3年度農業協同組合等現在数統計
statsDataId <- "0002003132"
df2021 <- estat_getStatsData(
  appId = appId,
  statsDataId = statsDataId
)
df2021 <- df2021 |>
  filter(`(R006-02-2-002)都道府県` %in% pref) |>
  filter(grepl("（参考１）出資組合と非出資組合の計（専門農協、業種別）_", `(R006-03-1-001)総括表`)) |>
  filter(!grepl("計$", `(R006-03-1-001)総括表`)) |>
  mutate(`(R006-03-1-001)総括表` = sub("（参考１）出資組合と非出資組合の計（専門農協、業種別）_", "", `(R006-03-1-001)総括表`)) |>
  rename("都道府県" = `(R006-02-2-002)都道府県`,
         "区分" = `(R006-03-1-001)総括表`) |>
  mutate(year = 2021)

# 令和4年度農業協同組合等現在数統計
df2022 <- df2 |>
  filter(grepl("（参考１）出資組合と非出資組合の計（専門農協、業種別）_", `(r006-02-1-002)区分`)) |>
  droplevels() |>
  mutate(区分 = sub("（参考１）出資組合と非出資組合の計（専門農協、業種別）_", "", `(r006-02-1-002)区分`)) |>
  select(-`(r006-02-1-002)区分`) |>
  rename("都道府県" = `(R006-02-2-002)都道府県`) |>
  mutate(year = 2022)

df_senmon2 <- rbind(df2015, df2016, df2017, df2019, df2020, df2021, df2022)
df_senmon2$区分 <- factor(df_senmon2$区分, levels = unique(df_senmon2$区分))
df_senmon2$都道府県 <- factor(df_senmon2$都道府県, levels = unique(df_senmon2$都道府県))

library(gghighlight)
library(ggsci)

g <- ggplot(data = df_senmon2 |> filter(区分 == levels(区分)[1]), aes(x = year, y = value, group = 都道府県, colour = 都道府県)) +
  geom_line() +
  geom_point() +
  gghighlight(max(value) > 15) +
  ggtitle(paste0("都道府県別専門農協の数の推移", "（", levels(df_senmon2$区分)[1], "）")) +
  labs(x = "年度",
       y = "専門農協の数",
       caption = "出典：農林水産省『農業協同組合等現在数統計』") +
  labs(x = "年度",
       y = "専門農協の数",
       caption = "出典：農林水産省『農業協同組合等現在数統計』") +
  theme_bw() +
  scale_color_d3()
g + theme(text = element_text(family = "HiraKakuProN-W3"))
```

```{r}
#| include: false
ggsave(file = "number_of_ja_by_pref_senmon_ippannoukyou.pdf", plot = g, path = outdir, width = 8, height = 4)
```

```{r}
#| warning: false
g <- ggplot(data = df_senmon2 |> filter(区分 == levels(区分)[2]), aes(x = year, y = value, group = 都道府県, colour = 都道府県)) +
  geom_line() +
  geom_point() +
  gghighlight(max(value) > 8) +
  ggtitle(paste0("都道府県別専門農協の数の推移", "（", levels(df_senmon2$区分)[2], "）")) +
  labs(x = "年度",
       y = "専門農協の数",
       caption = "出典：農林水産省『農業協同組合等現在数統計』") +
  theme_bw() +
  scale_color_d3()
g + theme(text = element_text(family = "HiraKakuProN-W3"))
```

```{r}
#| include: false
ggsave(file = "number_of_ja_by_pref_senmon_chikusan.pdf", plot = g, path = outdir, width = 8, height = 4)
```

```{r}
#| warning: false
g <- ggplot(data = df_senmon2 |> filter(区分 == levels(区分)[3]), aes(x = year, y = value, group = 都道府県, colour = 都道府県)) +
  geom_line() +
  geom_point() +
  gghighlight(max(value) > 10) +
  ggtitle(paste0("都道府県別専門農協の数の推移", "（", levels(df_senmon2$区分)[3], "）")) +
  labs(x = "年度",
       y = "専門農協の数",
       caption = "出典：農林水産省『農業協同組合等現在数統計』") +
  theme_bw() +
  scale_color_d3()
g + theme(text = element_text(family = "HiraKakuProN-W3"))
```

```{r}
#| include: false
ggsave(file = "number_of_ja_by_pref_senmon_rakunou.pdf", plot = g, path = outdir, width = 8, height = 4)
```

```{r}
#| warning: false
g <- ggplot(data = df_senmon2 |> filter(区分 == levels(区分)[4]), aes(x = year, y = value, group = 都道府県, colour = 都道府県)) +
  geom_line() +
  geom_point() +
  gghighlight(max(value) > 3) +
  ggtitle(paste0("都道府県別専門農協の数の推移", "（", levels(df_senmon2$区分)[4], "）")) +
  labs(x = "年度",
       y = "専門農協の数",
       caption = "出典：農林水産省『農業協同組合等現在数統計』") +
  theme_bw() +
  scale_color_d3()
g + theme(text = element_text(family = "HiraKakuProN-W3"))
```

```{r}
#| include: false
ggsave(file = "number_of_ja_by_pref_senmon_youkei.pdf", plot = g, path = outdir, width = 8, height = 4)
```

```{r}
#| warning: false
g <- ggplot(data = df_senmon2 |> filter(区分 == levels(区分)[5]), aes(x = year, y = value, group = 都道府県, colour = 都道府県)) +
  geom_line() +
  geom_point() +
  gghighlight(max(value) > 50) +
  ggtitle(paste0("都道府県別専門農協の数の推移", "（", levels(df_senmon2$区分)[5], "）")) +
  labs(x = "年度",
       y = "専門農協の数",
       caption = "出典：農林水産省『農業協同組合等現在数統計』") +
  theme_bw() +
  scale_color_d3()
g + theme(text = element_text(family = "HiraKakuProN-W3"))
```

```{r}
#| include: false
ggsave(file = "number_of_ja_by_pref_senmon_makinokanri.pdf", plot = g, path = outdir, width = 8, height = 4)
```

```{r}
#| warning: false
g <- ggplot(data = df_senmon2 |> filter(区分 == levels(区分)[6]), aes(x = year, y = value, group = 都道府県, colour = 都道府県)) +
  geom_line() +
  geom_point() +
  gghighlight(max(value) > 10) +
  ggtitle(paste0("都道府県別専門農協の数の推移", "（", levels(df_senmon2$区分)[6], "）")) +
  labs(x = "年度",
       y = "専門農協の数",
       caption = "出典：農林水産省『農業協同組合等現在数統計』") +
  theme_bw() +
  scale_color_d3()
g + theme(text = element_text(family = "HiraKakuProN-W3"))
```

```{r}
#| include: false
ggsave(file = "number_of_ja_by_pref_senmon_engeitokusan.pdf", plot = g, path = outdir, width = 8, height = 4)
```

```{r}
#| warning: false
g <- ggplot(data = df_senmon2 |> filter(区分 == levels(区分)[7]), aes(x = year, y = value, group = 都道府県, colour = 都道府県)) +
  geom_line() +
  geom_point() +
  gghighlight(max(value) > 1) +
  ggtitle(paste0("都道府県別専門農協の数の推移", "（", levels(df_senmon2$区分)[7], "）")) +
  labs(x = "年度",
       y = "専門農協の数",
       caption = "出典：農林水産省『農業協同組合等現在数統計』") +
  theme_bw() +
  scale_color_d3()
g + theme(text = element_text(family = "HiraKakuProN-W3"))
```

```{r}
#| include: false
ggsave(file = "number_of_ja_by_pref_senmon_nousonkougyou.pdf", plot = g, path = outdir, width = 8, height = 4)
```

```{r}
#| warning: false
library(scales)

g <- ggplot(data = df_senmon2 |> filter(区分 == levels(区分)[8]), aes(x = year, y = value, group = 都道府県, colour = 都道府県)) +
  geom_line() +
  geom_point() +
  gghighlight(max(value) > 0) +
  scale_y_continuous(labels = scales::number_format(accuracy = 1)) +
  ggtitle(paste0("都道府県別専門農協の数の推移", "（", levels(df_senmon2$区分)[8], "）")) +
  labs(x = "年度",
       y = "専門農協の数",
       caption = "出典：農林水産省『農業協同組合等現在数統計』") +
  theme_bw() +
  scale_color_d3()
g + theme(text = element_text(family = "HiraKakuProN-W3"))
```

```{r}
#| include: false
ggsave(file = "number_of_ja_by_pref_senmon_noujihousou.pdf", plot = g, path = outdir, width = 8, height = 4)
```

```{r}
#| warning: false
g <- ggplot(data = df_senmon2 |> filter(区分 == levels(区分)[9]), aes(x = year, y = value, group = 都道府県, colour = 都道府県)) +
  geom_line() +
  geom_point() +
  gghighlight(max(value) > 8) +
  ggtitle(paste0("都道府県別専門農協の数の推移", "（", levels(df_senmon2$区分)[9], "）")) +
  labs(x = "年度",
       y = "専門農協の数",
       caption = "出典：農林水産省『農業協同組合等現在数統計』") +
  theme_bw() +
  scale_color_d3()
g + theme(text = element_text(family = "HiraKakuProN-W3"))
```

```{r}
#| include: false
ggsave(file = "number_of_ja_by_pref_senmon_sonota.pdf", plot = g, path = outdir, width = 8, height = 4)
```
